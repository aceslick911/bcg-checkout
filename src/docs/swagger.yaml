basePath: /
definitions:
  products.Product:
    properties:
      created_at:
        type: string
      id:
        type: integer
      inventory_qty:
        type: integer
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      updated_at:
        type: string
    type: object
  tasks.Task:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      text:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/users.User'
      user_id:
        type: integer
    type: object
  users.User:
    properties:
      created_at:
        type: string
      firstname:
        type: string
      hash:
        type: string
      id:
        type: integer
      lastname:
        type: string
      role:
        $ref: '#/definitions/users.UserRole'
      updated_at:
        type: string
      username:
        type: string
    type: object
  users.UserRole:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role_name:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact:
    email: angeloperera@gmail.com
    name: Angelo Perera
    url: http://github.com/aceslick911
  description: API REST for BCG
  license:
    name: MIT
    url: http://github.com/aceslick911
  version: "1.0"
paths:
  /api/products:
    get:
      description: Get Products
      parameters:
      - description: Productname
        in: query
        name: productname
        type: string
      - description: Firstname
        in: query
        name: firstname
        type: string
      - description: Lastname
        in: query
        name: lastname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/products.Product'
              type: array
            type: array
      security:
      - Authorization Token: []
      summary: Retrieves products based on query
  /api/products/{id}:
    get:
      description: get Product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.Product'
      security:
      - Authorization Token: []
      summary: Retrieves product based on given ID
  /api/tasks:
    get:
      description: Get Tasks
      parameters:
      - description: Taskname
        in: query
        name: taskname
        type: string
      - description: Firstname
        in: query
        name: firstname
        type: string
      - description: Lastname
        in: query
        name: lastname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/tasks.Task'
              type: array
            type: array
      security:
      - Authorization Token: []
      summary: Retrieves tasks based on query
  /api/tasks/{id}:
    get:
      description: get Task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tasks.Task'
      security:
      - Authorization Token: []
      summary: Retrieves task based on given ID
  /api/users:
    get:
      description: Get Users
      parameters:
      - description: Username
        in: query
        name: username
        type: string
      - description: Firstname
        in: query
        name: firstname
        type: string
      - description: Lastname
        in: query
        name: lastname
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/users.User'
              type: array
            type: array
      security:
      - Authorization Token: []
      summary: Retrieves users based on query
  /api/users/{id}:
    get:
      description: get User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      security:
      - Authorization Token: []
      summary: Retrieves user based on given ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
